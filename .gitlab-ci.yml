stages:
  - lint
  - test
  - publish

variables:
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pypoetry"
  PYTHON_VERSION: "3.6"
  GITLAB_PACKAGE_REPOSITORY: https://gitlab.kaichan.info/api/v4/projects/22/packages/pypi

cache:
  key: $PYTHON_VERSION
  paths:
    - .cache/pypoetry

lint:
  stage: lint
  image: "python:${PYTHON_VERSION}"
  before_script:
    - pip install poetry
    - poetry install
  script:
    - make -k lint

test:
  stage: test
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.6", "3.7", "3.8", "3.9", "3.10"]
  image: "python:${PYTHON_VERSION}"
  before_script:
    - pip install poetry
    - poetry install
  script:
    - make test
  after_script:
    - make sonar_report.xml
  artifacts:
    when: always
    reports:
      junit: junit.xml
      cobertura: coverage.xml
    name: "test_result_${PYTHON_VERSION}"
    paths:
      - sonar_report.xml
      - coverage.xml
  coverage: '/^TOTAL.+?(\d+\%)$/'

sonarqube-scan:
  stage: test
  needs: ["test"]
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dproject.settings=sonar-private.properties -Dsonar.projectVersion="$(git describe --dirty=+)"
  allow_failure: true
  when: always

publish-package:
  stage: publish
  rules: # vX.Y.Zのタグがプッシュされたときのみ
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  image: "python:${PYTHON_VERSION}"
  before_script:
    - pip install poetry
    - poetry install
    - poetry config repositories.gitlab "${GITLAB_PACKAGE_REPOSITORY}"
    - poetry config http-basic.gitlab __token__ "${GITLAB_PACKAGE_TOKEN}"
  script:
    - poetry build && poetry publish --repository gitlab
